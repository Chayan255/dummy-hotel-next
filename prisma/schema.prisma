generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Menu {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  image       String?
  category    String
  createdAt   DateTime @default(now())

  cartItems CartItem[]  @relation("MenuCartItems")
  OrderItem OrderItem[]
}

model LunchMenu {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  image       String?
  category    String
  createdAt   DateTime @default(now())

  cartItems CartItem[]  @relation("LunchMenuCartItems")
  OrderItem OrderItem[]
}

model CartItem {
  id          Int  @id @default(autoincrement())
  menuId      Int?
  lunchMenuId Int?
  quantity    Int  @default(1)

  menu      Menu?      @relation("MenuCartItems", fields: [menuId], references: [id])
  lunchMenu LunchMenu? @relation("LunchMenuCartItems", fields: [lunchMenuId], references: [id])
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model Order {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  total     Float
  items     OrderItem[] // âœ… One-to-many relationship
}

model OrderItem {
  id      Int   @id @default(autoincrement())
  order   Order @relation(fields: [orderId], references: [id])
  orderId Int

  // ðŸ§  Optional: Copy of menu info at time of purchase (snapshot)
  name     String
  price    Float
  quantity Int

  menuId      Int?
  lunchMenuId Int?

  menu      Menu?      @relation(fields: [menuId], references: [id])
  lunchMenu LunchMenu? @relation(fields: [lunchMenuId], references: [id])
}
